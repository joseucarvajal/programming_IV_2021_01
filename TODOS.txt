================ Sun, feb 28th ================
1. To create a new web site. This web site should have at least 3 different web pages.
2. To create at least 2 different CSS files.
3. Images must be included.
4. Every page must have links to the others pages.
5. This project must be hosted on GitHub with the following name: "taller-html-css"
6. contraints:
    1. This home work must be presented individually
    2. Deadline: Sun, feb 28th

================ Tue, Mar 2nd ================
1. To create a new database, as per an idea that might have.
2. The database must have at least 4 different tables with relations among them.
3. Populate the database tables with fake data (at least 5 records for each table)
4. To create a new Github project to attach some screenshots with information about the tables, fields, and the fake records inserted into the tables.
5. The GitHub project must be named: "web-project-db-design"

================ Tue, Mar 16th ================
1. Create new GitHub project: "create-records-db"
2. Create two different pages to allow the end user create new objets/records. At least one form, should include a relationship with another table. (e.g.): The form we created in class (enrollment -> student).
3. Once the record has been created, the form data shouldn't lost. Not white screens as response are allowed, same fashion as we did with the "calculator" exercise in clase. The same initial form should be displayed.
4. Attach the following screenshots. Step by step.
4.1. Web application
4.2. Creating records
4.3. Database before and afterwards

================ Mon, Apr 12th ================
1. Create new GitHub project: "db-search"
2. Create two pages with reports
3. A user should be able filter out results (with different filter criteria)
4. At least 3 different fiels should be included per filter definition
5. Two different buttons must be included (Search any -OR-) and (Search all -AND-). The results must be displayed as per the user selection (OR, AND)
6. Attach the following screenshots. Step by step.
6.1. Web application
6.2. Filteing out results

================ Mon, Apr 19th ================
1. Create new React application "react-basic-app"
2. Create git-hub repository "react-basic-app"
3. Complete the componente structure started in class (https://reactjs.org/docs/thinking-in-react.html)
4. The structure content and styles must be included.
5. Attach screenshots to the github repository (.jpg, .png)

================ Sat, Apr 24th ================
1. Create new React application "react-coditional-rendering"
2. Create git-hub repository "react-coditional-rendering"
3. Create a new React application with the following objects:
    1. Students
    2. Course
    3. Grades
4. Create components to display courses with their students, their grades and their genders
            Programming 1		
    Name	    Grade	    Gender
    Pepito	    3.5	        Male   (male image)
    Maria	    2.1(RED)    Female (female image)
    Carlitos	2(RED)	    Male (male image)
            Programming 2		
    Name	    Grade	    Gender
    Miguel	    3.5	        Male   (male image)
    Natalia	    2.1(RED)    Female (female image)

5. Add at least 3 courses and 20 students
6. Create at least 3 components with props
7. Attach screenshots to the github repository (.jpg, .png)


================ Wed, Apr 28th ================
1. Create new React application "react-forms"
2. Create git-hub repository "react-forms"
3. Create differente components (at least 3 components). (Add screenshot)
4. Must create(invent) 3 different classes and 15 different objects
5. The object should be related among them. (e.g.: A category has many products like we studied in class)
6. Create one form to add new objects, must create variables (setState)
7. Create fake data (e.g. "products.page.jsx" in class)
8. Add CSS styles to the components
9. Print variables names and values with console.log() as we did in class. (Add screenshot)
10. Attach screenshots to the github repository (.jpg, .png)
    10.1. Application working (components, design CSS)
    10.2. Printed values with console.log()


================ Schedule ==============
Grades part 1: Apr 6, 8, 13
Grades part 2: May 13, 18, 20

